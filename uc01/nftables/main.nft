#!/usr/sbin/nft -f
# vi: ft=nftables
# /etc/nftables/main.nft

flush ruleset

table inet main {
    # dn42 interfaces
    set dn42_interfaces {
        type ifname
        elements = {
            "wginternal0",
            "wginternal1",
            "wg0253moe233lv",
            "wg2717hujklax",
            "wg3914kiouus3",
            "wg0207rbitslax",
            # __MAKE_PEERING_MARKER Do not remove this comment
        }
    }
    # dn42 WireGuard listening ports
    set dn42_wg_ports {
        type inet_service
        elements = {
            24300,
            24301,
            24201,
            24215,
            24205,
            24207,
            # __MAKE_PEERING_PORT_MARKER Do not remove this comment
        }
    }
    # dn42 assigned addresses
    define dn42_self_ipv4 = 172.23.6.166
    define dn42_self_ipv6 = fdc0:d227:306:ee01::6
    # dn42 services on this host
    set dn42_ports {
        type inet_proto . inet_service
    }

    # Public interface
    set public_interfaces {
        type ifname
        elements = { "wlp3s0", "enp2s0" }
    }

    # 44Net interfaces
    set ampr_interfaces {
        type ifname
        elements = { "tunl0" }
    }

    # AREDN interfaces
    set aredn_interfaces {
        type ifname
        elements = { "wgarednkk6uc" }
    }

    include "/etc/nftables/shared-chains.nft"
    include "/etc/nftables/public-chains.nft"
    include "/etc/nftables/dn42-chains.nft"
    include "/etc/nftables/ampr-chains.nft"
    include "/etc/nftables/aredn-chains.nft"

    chain forward_machdep {
        # Accept all traffic within the dn42 network
        iifname @dn42_interfaces oifname @dn42_interfaces counter accept
        # Allow our traffic to access 44Net
        iifname @dn42_interfaces ip saddr $dn42_self_ipv4_prefix oifname @ampr_interfaces counter accept
        # Allow 44Net to access our services
        iifname @ampr_interfaces oifname @dn42_interfaces ip daddr $ampr_self_prefix counter accept
        # likely not needed, but just in case
        iifname @ampr_interfaces oifname @ampr_interfaces counter accept
    }

    chain input {
        type filter hook input priority filter + 10; policy drop;
        ct state { established, related } accept
        ct status dnat accept
        iifname "lo" accept
        ct state invalid log prefix "INPUT_STATE_INVALID_DROP: " drop
        iifname @public_interfaces jump input_public
        iifname @dn42_interfaces jump input_dn42
        iifname @ampr_interfaces jump input_ampr
        iifname @aredn_interfaces jump input_aredn
        jump input_public
        # Should have reached a decision by now
        log prefix "input_FINAL_REJECT: " counter reject with icmpx admin-prohibited
    }

    chain nat_post {
        type nat hook postrouting priority srcnat + 10; policy accept;
        oifname @public_interfaces goto nat_post_public
        oifname @dn42_interfaces goto nat_post_dn42
        oifname @ampr_interfaces goto nat_post_ampr
        goto nat_post_public
    }
}
